name: Service ProjectsApi

on:
  push:
    branches:
      - master
    paths:
      - ProjectsApi/**

env:
  AZURE_CONTAINER_REGISTRY: "onlinevideoeditor"
  RESOURCE_GROUP: "onlinevideoeditor"
  AZURE_LOGIN_SERVER: onlinevideoeditor.azurecr.io
  IMAGE_NAME: ProjectsApi
#  CLUSTER_NAME: ""
#  DEPLOYMENT_MANIFEST_PATH: "your-deployment-manifest-path"

jobs:
  release:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push to ACR
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./projectsApi
          tags: ${{ env.AZURE_LOGIN_SERVER }}/onlinevideoeditor:${{ env.IMAGE_NAME }}-${{ github.sha }}
          file: ProjectsApi/Dockerfile

#      - name: Docker login to ACR
#        run: |
#          docker login ${{ env.AZURE_LOGIN_SERVER }} --username ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}
#
#      - name: Tag image
#        run: |
#          docker tag ${{ env.IMAGE_NAME }} ${{ env.AZURE_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}
#
#      - name: Push to ACR
#        run: |
#          docker push ${{ env.AZURE_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}
#      - name: Azure login
#        uses: azure/login@v1.4.6
#        with:
#          creds: '${{ secrets.AZURE_CREDENTIALS }}'
#          #client-id: ${{ secrets.AZURE_CLIENT_ID }}
#          #tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#          #subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#
#      - name: Build and push image to ACR
#        run: |
#          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/online-video-editor:ProjectsApi-${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} ./ProjectsApi/

  #source:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: 
#        uses: 

