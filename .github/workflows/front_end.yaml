name: Service front_end

on:
  push:
    branches:
      - master
    paths:
      - front_end/**
  workflow_dispatch:
    # Allows for manual build trigger for workflow testing purposes

env:
  AZURE_LOGIN_SERVER: onlinevideoeditor.azurecr.io
  SERVICE_NAME: front_end

jobs:
  release:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Docker login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build staging release and push to ACR
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./${{ env.SERVICE_NAME }}
          tags: |-
            ${{ env.AZURE_LOGIN_SERVER }}/${{ env.SERVICE_NAME }}-staging:latest
            ${{ env.AZURE_LOGIN_SERVER }}/${{ env.SERVICE_NAME }}-staging:${{ github.sha }}
          file: ${{ env.SERVICE_NAME }}/Dockerfile
          build-args:
            ENVIRONMENT=staging

      - name: Build production release and push to ACR
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./${{ env.SERVICE_NAME }}
          tags: |-
            ${{ env.AZURE_LOGIN_SERVER }}/${{ env.SERVICE_NAME }}:latest
            ${{ env.AZURE_LOGIN_SERVER }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          file: ${{ env.SERVICE_NAME }}/Dockerfile
          build-args:
            ENVIRONMENT=production

  deploy-staging:
     needs: [ release ]
     runs-on: ubuntu-latest
     steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: onlinevideoeditor
          cluster-name: online-video-editor

      - name: Bake Kustomize staging overlay
        uses: azure/k8s-bake@v3
        with:
          renderEngine: 'kustomize'
          kustomizationPath: './k8s/overlays/staging'
          kubectl-version: 'latest'
        id: bake-staging

      - name: Filter only this deployment
        run: |-
          pip install yq
          yq -y 'select(.kind == "Deployment" and .metadata.name == "frontend")' "${{ steps.bake-staging.outputs.manifestsBundle }}" > single.yaml
        id: bake-filtered

      - name: Deploy staging on AKS
        id: install-kubectl
        uses: azure/k8s-deploy@v4
        with:
          namespace: 'staging'
          manifests: single.yaml
          images: 'onlinevideoeditor.azurecr.io/${{ env.SERVICE_NAME }}-staging:${{ github.sha }}'

  deploy-production:
     needs: [ release ]
     runs-on: ubuntu-latest
     steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: onlinevideoeditor
          cluster-name: online-video-editor

      - name: Bake Kustomize production overlay
        uses: azure/k8s-bake@v3
        with:
          renderEngine: 'kustomize'
          kustomizationPath: './k8s/overlays/production'
          kubectl-version: 'latest'
        id: bake-production

      - name: Filter only this deployment
        run: |-
          pip install yq
          yq -y 'select(.kind == "Deployment" and .metadata.name == "frontend")' "${{ steps.bake-production.outputs.manifestsBundle }}" > single.yaml
        id: bake-filtered

      - name: Deploy production on AKS
        id: install-kubectl
        uses: azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: single.yaml
          images: 'onlinevideoeditor.azurecr.io/${{ env.SERVICE_NAME }}:${{ github.sha }}'
