#services:
#  postgresql:
#    image: postgres
#    container_name: projects-pgsql
#    restart: always
#    environment:
#      POSTGRES_USER: dbuser
#      POSTGRES_PASSWORD: dbpass
#      POSTGRES_DB: Projects
#    ports:
#      - "5432:5432"
#
##  azurite:
##    image: mcr.microsoft.com/azure-storage/azurite
##    command: "azurite --loose --queueHost 0.0.0.0 --queuePort 10001"
##    container_name: azurite
##    restart: always
##    ports:
##      - 10001:10001
#
##  rabbitmq:
##    image: rabbitmq
##    container_name: rabbitmq
##    restart: always
##    environment:
##      RABBITMQ_DEFAULT_USER: rabbituser
##      RABBITMQ_DEFAULT_PASS: rabbitpass
##    ports:
##      - "5672:5672"
##      - "15672:15672"
##
##  renderworker:
##    build:
##      context: ./video_render_worker
##    container_name: renderworker
##    restart: always
##    environment:
##      RABBITMQ_USERNAME: rabbituser
##      RABBITMQ_PASSWORD: rabbitpass
##    depends_on:
##      - postgresql
##      - rabbitmq
#
#  projects_api:
#    build:
#      context: ./ProjectsApi
#      args:
#        - BUILD_CONFIGURATION=Debug
#    container_name: projects-api
#    restart: always
#    environment:
#      RABBITMQ_USERNAME: rabbituser
#      RABBITMQ_PASSWORD: rabbitpass
#      DB_HOST: projects-pgsql
#      DB_USER: dbuser
#      DB_PASSWORD: dbpass
#      DB_NAME: Projects
#      AZURE_SERVICE_BUS_CONN_STR: Endpoint=sb://onlinevideoeditor-dev.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=E73LCgSPtDMXIDzhuUNI3dQQxof2bq4FD+ASbEOLImY=
#      #"DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;"
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgresql
##      - azurite
##      - rabbitmq
#
#  frontend:
#    build:
#      context: ./front_end
#    container_name: frontend
#    restart: always
#    ports:
#      - "80:80"
#    depends_on:
#      - projects_api
#    environment:
#      REACT_APP_AUTH0_DOMAIN: dev-y4xffymaoj0vh0eb.eu.auth0.com
#      REACT_APP_AUTH0_CLIENT_ID: 9j4ED7GEAWPZaEDnvSlUGDOzz7EcvVB0


services:
  postgresql:
    image: postgres
    container_name: postgresql
    restart: always
    volumes:
      - ./db-init.sql:/docker-entrypoint-initdb.d/init.sql
    environment: &pg_credentials
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpass
      # This host isn't used for this image itself, but it will make it
      # available for services merging the `pg_credentials`.
      POSTGRES_HOST: postgresql:5432
    ports:
      - 5432:5432

  projects-api:
    build:
      context: ./ProjectsApi
    container_name: projects-api
    restart: always
    environment:
      <<: *pg_credentials
      POSTGRES_DB: projects
      AZURE_SERVICE_BUS_CONN_STR: Endpoint=sb://onlinevideoeditor-dev.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=E73LCgSPtDMXIDzhuUNI3dQQxof2bq4FD+ASbEOLImY=
      AUTH0_DOMAIN: dev-y4xffymaoj0vh0eb.eu.auth0.com
#    ports:
#      - 5003:5003
    depends_on:
      - postgresql

  media-service:
    build:
      context: ./MediaService/MediaService
    container_name: media-service-api
    restart: always
    environment:
      <<: *pg_credentials
      POSTGRES_DB: media
      AZURE_SERVICE_BUS_CONN_STR: Endpoint=sb://onlinevideoeditor-dev.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=E73LCgSPtDMXIDzhuUNI3dQQxof2bq4FD+ASbEOLImY=
      AZURE_STORAGE_CONN_STR: DefaultEndpointsProtocol=https;AccountName=onlinevideoeditor;AccountKey=iF9hoGilzhz3xecpFcLmtE6O5dBwcHluOv/HGc9S7SUaE7N76UUTaStW3fqvI+EL3I4uJPlF4uUZ+ASt2Sb73Q==;EndpointSuffix=core.windows.net
      AUTH0_DOMAIN: https://dev-y4xffymaoj0vh0eb.eu.auth0.com
#    ports:
#      - 5173:5173
    depends_on:
      - postgresql

  frontend:
    build:
      context: ./front_end
      args:
        # Although this is not a development build, we still want to use the
        # development Auth0 environment.
        - ENVIRONMENT=development
#      target: build
#    command: npm run start
    container_name: front-end
    restart: always
#    volumes:
#      - ./front_end:/app
#      - ./front_end/node_modules:/app/node_modules
#    ports:
#      - 3000:3000
    environment:
      REACT_APP_AUTH0_DOMAIN: dev-y4xffymaoj0vh0eb.eu.auth0.com
      REACT_APP_AUTH0_CLIENT_ID: 9j4ED7GEAWPZaEDnvSlUGDOzz7EcvVB0

  api_gateway:
    build:
      context: ./ApiGateway
    container_name: api-gateway
    restart: always
#    ports:
#      - 8080:8080

  dev_gateway:
    build:
      context: ./dev_gateway
    restart: always
    depends_on:
      - frontend
      - projects-api
    ports:
      - 80:80
