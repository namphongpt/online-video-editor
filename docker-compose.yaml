services:
  postgresql:
    image: postgres
    container_name: postgresql
    restart: always
    volumes:
      - ./db-init.sql:/docker-entrypoint-initdb.d/init.sql
    environment: &pg_credentials
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpass
      # This host isn't used for this image itself, but it will make it
      # available for services merging the `pg_credentials`.
      POSTGRES_HOST: postgresql:5432
    ports:
      - 5432:5432

  projects-api:
    build:
      context: ./ProjectsApi
      args:
        - BUILD_CONFIGURATION=Debug
      target: build
    command: sh -c "/app/efbundle && dotnet run"
    container_name: projects-api
    restart: always
    environment:
      <<: *pg_credentials
      POSTGRES_DB: projects
      AZURE_SERVICE_BUS_CONN_STR: Endpoint=sb://onlinevideoeditor-dev.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=E73LCgSPtDMXIDzhuUNI3dQQxof2bq4FD+ASbEOLImY=
      AUTH0_DOMAIN: https://dev-y4xffymaoj0vh0eb.eu.auth0.com
    ports:
      - 5003:5003
    depends_on:
      - postgresql

  media-service:
    build:
      context: ./MediaService
      args:
        - BUILD_CONFIGURATION=Debug
      target: build
    command: sh -c "/app/efbundle && dotnet run"
    container_name: media-service-api
    restart: always
    environment:
      <<: *pg_credentials
      POSTGRES_DB: media
      AZURE_SERVICE_BUS_CONN_STR: Endpoint=sb://onlinevideoeditor-dev.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=E73LCgSPtDMXIDzhuUNI3dQQxof2bq4FD+ASbEOLImY=
      AZURE_STORAGE_CONN_STR: DefaultEndpointsProtocol=https;AccountName=onlinevideoeditor;AccountKey=iF9hoGilzhz3xecpFcLmtE6O5dBwcHluOv/HGc9S7SUaE7N76UUTaStW3fqvI+EL3I4uJPlF4uUZ+ASt2Sb73Q==;EndpointSuffix=core.windows.net
      AUTH0_DOMAIN: https://dev-y4xffymaoj0vh0eb.eu.auth0.com
    ports:
      - 5173:5173
    depends_on:
      - postgresql

  frontend:
    build:
      context: ./front_end
      target: build
      args:
        - ENVIRONMENT=development
    command: npm run start
    container_name: front-end
    restart: always
    volumes:
      - ./front_end:/app
      - ./front_end/node_modules:/app/node_modules
    ports:
      - 3000:3000
    environment:
      REACT_APP_AUTH0_DOMAIN: dev-y4xffymaoj0vh0eb.eu.auth0.com
      REACT_APP_AUTH0_CLIENT_ID: 9j4ED7GEAWPZaEDnvSlUGDOzz7EcvVB0

  api_gateway:
    build:
      context: ./ApiGateway
    container_name: api-gateway
    restart: always
    ports:
      - 8080:8080

  dev-gateway:
    build:
      context: ./dev_gateway
    container_name: gateway
    restart: always
    depends_on:
      - frontend
      - projects-api
    ports:
      - 80:80

  video-render-worker:
    build:
      context: ./VideoRenderWorker
    container_name: video-render-worker
    restart: always
    environment:
      AZURE_SERVICE_BUS_CONN_STR: Endpoint=sb://onlinevideoeditor-dev.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=E73LCgSPtDMXIDzhuUNI3dQQxof2bq4FD+ASbEOLImY=
